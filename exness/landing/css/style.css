/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain) */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: "CirceWebRegular", sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

@font-face {
  font-family: "ArialMT";
  src: url("../fonts/ArialMT.woff"); }

@font-face {
  font-family: "CirceWebLight";
  font-style: normal;
  font-weight: 400;
  src: url("../fonts/CirceWebLight.woff"); }

@font-face {
  font-family: "CirceWebExtraLight";
  font-style: normal;
  font-weight: 400;
  src: url("../fonts/CirceWebExtraLight.woff"); }

@font-face {
  font-family: "CirceWebRegular";
  font-style: normal;
  font-weight: 400;
  src: url("../fonts/CirceWebRegular.woff"); }

@font-face {
  font-family: "CirceWebBold";
  font-style: normal;
  font-weight: 400;
  src: url("../fonts/CirceWebBold.woff"); }

*, :after, :before, input[type=search] {
  box-sizing: border-box; }

body {
  background-color: #DEDEDE;
  font-family: "CirceWebRegular", sans-serif; }

.container {
  margin: 0 auto;
  width: 480px; }
  @media (min-width: 768px) {
    .container {
      width: 768px; } }
  @media (min-width: 1200px) {
    .container {
      width: 1200px; } }

ul {
  margin: 0; }

img {
  display: block;
  max-width: 100%;
  height: auto; }

.btn {
  background-color: #FFCF00;
  border: none;
  color: #000000;
  cursor: pointer;
  text-decoration: none;
  line-height: 146%;
  display: block;
  font-size: 11px;
  margin: 0 auto;
  height: 72px;
  text-transform: uppercase;
  text-align: left;
  width: 304px;
  position: relative;
  overflow: hidden;
  padding-left: 30px; }
  .btn::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    right: 25px;
    background: url("../img/ArrowCopy2.png") left center no-repeat;
    transform: rotate(180deg); }
  .btn:focus {
    outline: none; }

.input {
  display: block;
  width: 328px;
  height: 72px;
  padding: 20px;
  background-color: #EFEFEF;
  background-clip: padding-box;
  border: 0; }
  .input:focus {
    outline: 0; }

.welcome {
  background: url(../img/back_null_percents.jpg) no-repeat top center;
  height: 640px;
  position: relative;
  text-align: left;
  padding: 24px;
  background-position-x: 80%; }
  @media (min-width: 1200px) {
    .welcome {
      padding: 61px 56px;
      background-position-x: 100%; } }

.welcome__header {
  display: flex;
  justify-content: space-between; }

.welcome__logo {
  margin-top: 0;
  width: 104px;
  height: 56px; }
  @media (min-width: 1200px) {
    .welcome__logo {
      margin-top: -13px; } }

.welcome__menu {
  display: none; }
  @media (min-width: 1200px) {
    .welcome__menu {
      display: flex;
      text-transform: uppercase;
      font-size: 11px;
      line-height: 146%; } }

@media (min-width: 1200px) {
  .welcome__language {
    color: #ffffff;
    text-decoration: none;
    display: flex;
    justify-content: space-between; } }

@media (min-width: 1200px) {
  .welcome-language__arrow {
    border: solid #9B9B9B;
    border-width: 0 4px 4px 0;
    display: inline-block;
    padding: 4px;
    margin: 0 0 0 10px;
    transform: rotate(45deg);
    -webkit-transform: rotate(45deg);
    vertical-align: top;
    border-bottom-width: thin;
    border-right-width: thin; } }

@media (min-width: 1200px) {
  .welcome__name {
    color: #FFCF00;
    margin-left: 50px; } }

.welcome__first-title {
  color: #ffffff;
  line-height: 120%;
  font-size: 40px;
  padding-top: 200px;
  font-family: "CirceWebExtraLight", sans-serif; }
  @media (min-width: 1200px) {
    .welcome__first-title {
      padding-top: 160px;
      line-height: 110%;
      font-size: 66px; } }

.welcome__second-title {
  color: #D2D2D2;
  font-size: 24px;
  line-height: 134%;
  padding: 20px 0 30px;
  font-family: "CirceWebExtraLight", sans-serif; }
  @media (min-width: 1200px) {
    .welcome__second-title {
      color: #9B9B9B;
      font-size: 30px; } }

.welcome__btn {
  display: inline-block; }

.info-one {
  overflow: hidden; }

.info-one__items {
  background-color: #FFCF00;
  display: flex;
  flex-direction: column;
  padding: 20px;
  height: 400px;
  text-align: center;
  align-items: center; }
  @media (min-width: 1200px) {
    .info-one__items {
      flex-direction: row;
      text-align: left;
      justify-content: space-around;
      position: relative;
      padding: 50px; } }

.info-one__account-text {
  display: none; }
  @media (min-width: 1200px) {
    .info-one__account-text {
      font-family: "CirceWebBold", sans-serif;
      display: block;
      transform: rotate(90deg);
      font-size: 20px;
      line-height: 160%;
      font-weight: bold;
      white-space: nowrap;
      overflow: hidden;
      height: 60px;
      position: absolute;
      left: -70px;
      top: 0;
      bottom: 0;
      margin: auto;
      text-align: center; } }

.info-one__percent {
  background: url(../img/zero.svg) no-repeat center center;
  height: 201px;
  width: 100%;
  background-size: contain;
  margin: 40px 0; }
  @media (min-width: 1200px) {
    .info-one__percent {
      margin: 0px 140px 0 90px;
      display: flex;
      justify-content: center;
      align-items: flex-end;
      position: relative; } }

.info-one__comission-text {
  display: none; }
  @media (min-width: 1200px) {
    .info-one__comission-text {
      display: block; } }
  @media (min-width: 1200px) {
    .info-one__comission-text {
      white-space: nowrap;
      font-size: 20px;
      line-height: 160%;
      font-family: "CirceWebBold", sans-serif;
      display: block;
      position: absolute;
      bottom: -60px;
      margin: 0 auto;
      left: 0;
      right: 0;
      text-align: center; } }

.info-one__text {
  font-size: 22px;
  line-height: 146%;
  color: #000000;
  width: 100%; }
  @media (min-width: 1200px) {
    .info-one__text {
      font-size: 40px;
      line-height: 120%;
      width: 1350px;
      display: flex;
      align-items: center; } }

.info-two {
  overflow: hidden;
  background-color: transparent; }

.info-two__items {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 50px 14px 14px 14px; }

.info-two__title {
  overflow: hidden;
  font-size: 30px;
  line-height: 134%;
  color: #000000;
  padding: 0 50px;
  text-align: center; }
  @media (min-width: 1200px) {
    .info-two__title {
      font-size: 40px;
      line-height: 120%; } }

.info-two__banners-area {
  padding: 50px 5px;
  display: flex;
  flex-direction: row;
  align-items: center;
  align-self: stretch;
  justify-content: space-between; }

.info-two__arrow-left,
.info-two__arrow-right {
  background-image: url("../img/ArrowCopy2.png");
  width: 24px;
  height: 24px; }
  @media (min-width: 1200px) {
    .info-two__arrow-left,
    .info-two__arrow-right {
      display: none; } }

.info-two__arrow-right {
  transform: rotate(180deg); }

.info-two__banners {
  display: flex;
  flex-direction: row;
  overflow: hidden;
  width: 206px;
  height: 66px;
  position: relative; }
  @media (min-width: 1200px) {
    .info-two__banners {
      flex-wrap: wrap;
      width: auto;
      height: auto;
      justify-content: center; } }

@media (min-width: 1200px) {
  .info-two__banner {
    margin: 20px 40px; } }

.info-two__form {
  display: flex;
  justify-content: center; }

.info-two__mobile {
  display: none; }
  @media (min-width: 1200px) {
    .info-two__mobile {
      display: flex;
      margin-right: 20px;
      flex-direction: column; }
      .info-two__mobile input {
        color: #9B9B9B; } }

@media (min-width: 1200px) {
  .info-two-mobile__example {
    font-size: 11px;
    color: #9B9B9B;
    line-height: 146%;
    padding: 10px 15px; } }

.info-two__email {
  display: none; }
  @media (min-width: 1200px) {
    .info-two__email {
      display: block;
      margin-right: 20px; }
      .info-two__email input {
        box-shadow: 0 0 8px 2px rgba(0, 0, 0, 0.12);
        background-color: #ffffff;
        color: #000000;
        border: 1px solid #DEDEDE; } }

.info-two__text {
  overflow: hidden;
  font-size: 13px;
  line-height: 124%;
  color: #000000;
  padding: 10px 0 30px 0;
  text-align: center;
  width: 480px; }
  @media (min-width: 1200px) {
    .info-two__text {
      width: 500px; } }

.page-footer {
  margin: 0;
  display: flex;
  flex-direction: column;
  background-color: #232323; }

.page-footer__social {
  display: flex;
  padding: 20px;
  justify-content: space-around;
  width: 400px;
  margin: auto;
  line-height: 143%;
  align-items: center; }
  .page-footer__social img {
    width: auto;
    height: 20px; }

.page-footer__menu {
  display: flex;
  padding: 20px;
  justify-content: space-around;
  margin: auto 0;
  font-family: "CirceWebLight", sans-serif; }
  @media (min-width: 1200px) {
    .page-footer__menu {
      padding: 20px 40px; } }

.page-footer-menu__column {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  text-align: center; }
  @media (min-width: 1200px) {
    .page-footer-menu__column {
      text-align: left;
      padding-right: 50px; } }

.page-footer-menu__link {
  color: #9B9B9B;
  text-decoration: none;
  line-height: 150%;
  font-size: 16px; }
  @media (min-width: 1200px) {
    .page-footer-menu__link {
      line-height: 146%;
      text-decoration: underline; } }

.page-footer-menu__link_primary {
  color: #ffffff; }

.page-footer__info {
  border-top: 1px solid #616161;
  padding: 40px 20px 50px 20px;
  display: flex;
  justify-content: center; }
  @media (min-width: 1200px) {
    .page-footer__info {
      justify-content: space-between;
      padding: 40px 40px 50px 40px; } }

.page-footer-info__text {
  text-align: center;
  color: #616161;
  font-size: 11px;
  line-height: 146%;
  font-family: 'ArialMT'; }
  @media (min-width: 1200px) {
    .page-footer-info__text {
      text-align: left; } }

.page-footer-info__banners {
  display: none; }
  @media (min-width: 1200px) {
    .page-footer-info__banners {
      display: flex;
      flex-direction: row;
      justify-content: center;
      align-items: flex-start;
      flex-wrap: wrap;
      min-width: 300px;
      margin-right: -20px; }
      .page-footer-info__banners img {
        margin: 0 20px 20px 10px; } }

.page-footer-info__link {
  color: #616161; }

.page-footer_desktop-only {
  display: none; }
  @media (min-width: 1200px) {
    .page-footer_desktop-only {
      display: flex; } }

.page-footer_mobile-only {
  display: block; }
  @media (min-width: 1200px) {
    .page-footer_mobile-only {
      display: none; } }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdsb2JhbC9yZXNldC5zY3NzIiwiZ2xvYmFsL25vcm1hbGl6ZS5zY3NzIiwidmFyaWFibGVzLnNjc3MiLCJzdHlsZS5jc3MiLCJnbG9iYWwvZm9udHMuc2NzcyIsImdsb2JhbC9sYXlvdXQuc2NzcyIsIm1peGlucy5zY3NzIiwiYmxvY2tzL2J0bnMuc2NzcyIsImJsb2Nrcy9pbnB1dHMuc2NzcyIsImJsb2Nrcy9pbmRleC93ZWxjb21lLnNjc3MiLCJibG9ja3MvaW5kZXgvaW5mby1vbmUuc2NzcyIsImJsb2Nrcy9pbmRleC9pbmZvLXR3by5zY3NzIiwiYmxvY2tzL3BhZ2UtZm9vdGVyLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O21DQUVtQztBQUVuQzs7Ozs7Ozs7Ozs7OztFQWFFLFVBQW1CO0VBQ25CLFdBQW1CO0VBQ25CLFVBQW1CO0VBQ25CLGdCQUFzQjtFQUN0QixjQUF5QjtFQUN6Qix5QkFBMEIsRUFDM0I7O0FBRUQsaURBQWlEO0FBQ2pEOztFQUVFLGVBQWdCLEVBQ2pCOztBQUVEO0VBQ0UsZUFBZ0IsRUFDakI7O0FBRUQ7RUFDRSxpQkFBa0IsRUFDbkI7O0FBRUQ7RUFDRSxhQUFjLEVBQ2Y7O0FBRUQ7O0VBRUUsWUFBYTtFQUNiLGNBQWUsRUFDaEI7O0FBRUQ7RUFDRSwwQkFBMkI7RUFDM0Isa0JBQW9CLEVBQ3JCOztBQ3BERCw0RUFBNEU7QUFFNUU7Ozs7R0FJRztBQUVIO0VBQ0UsMkNDTXFEO0VETlgsT0FBTztFQUNqRCxrQkFBZ0M7RUFBRSxPQUFPO0VBQ3pDLDJCQUFnQztFQUFFLE9BQU87RUFDekMsK0JBQWdDO0VBQUUsT0FBTyxFQUMxQzs7QUFFRDs7R0FFRztBQUVIO0VBQ0UsVUFBVyxFQUNaOztBQUVEO2dGQUNnRjtBQUVoRjs7OztHQUlHO0FBRUg7Ozs7Ozs7Ozs7OztFQVdVLE9BQU87RUFDZixlQUFnQixFQUNqQjs7QUFFRDs7R0FFRztBQUVIOzs7O0VBSUUsc0JBQXVCLEVBQ3hCOztBQUVEOztHQUVHO0FBRUg7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QUEyQjtFQUMzQixnQkFBMkIsRUFTNUI7RUFKQztJQVRGO01BVUssa0JBQXdCO01BQ3hCLDJCQUE2QixFQUVqQyxFQUFBOztBQUVEO0VBQ0UsZVY1RCtCLEVVbUVoQzs7QUFFRDtFQUNFLDhCQUFzQztFQUN0Qyw2QkFBd0M7RUFDeEMsY0FBeUI7RUFDekIsd0JBQTJCLEVBUzVCO0VBSkM7SUFURjtNQVVJLCtCQUFnQztNQUNoQyw2QkFBc0MsRUFFekMsRUFBQTs7QUFFRDtFQUNFLG1CQUF5QjtFQUN6QixlQUEwQjtFQUMxQixnQlZyRjRCO0VVc0Y1QixrQkFBdUI7RUFDdkIsdUJBQTRCLEVBUTdCO0VBSEM7SUFWRjtNQVdJLGlCQUFxQixFQUV4QixFQUFBOztBQUVEO0VBQ0UsY0FBeUIsRUFrQjFCO0VBYkM7SUFORjtNQVdJLGNBQXVCO01BQ3ZCLG9CQUFzQjtNQUN0Qix3QkFBeUI7TUFDekIsd0JBQTZCO01BQzdCLGdCQUF1QjtNQUN2QixpQkFBd0I7TUFDeEIsb0JBQXdCLEVBRTNCO01BbkJEO1FBUU0seUJBQWlDLEVBQ2xDLEVBQUE7O0FBWUw7RUFDRSxlQUFnQixFQU9qQjs7QUFFRDtFTjFJRSxjQUFpQixFTWtKbEI7RU43SUM7SU1xSUY7TU5wSUksY01xSWdDLEVBT25DLEVBQUE7O0FBRUQ7RU4vSkUsZU1nS2tDLEVBT25DO0VObEtDO0lNMEpGO01OekpJLGNBQWlCLEVNaUtwQixFQUFBIiwiZmlsZSI6InN0eWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGh0dHA6Ly9tZXllcndlYi5jb20vZXJpYy90b29scy9jc3MvcmVzZXQvXHJcbiAgIHYyLjAgfCAyMDExMDEyNlxyXG4gICBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKSAqL1xyXG5cclxuaHRtbCwgYm9keSwgZGl2LCBzcGFuLCBhcHBsZXQsIG9iamVjdCwgaWZyYW1lLFxyXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsXHJcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcclxuZGVsLCBkZm4sIGVtLCBpbWcsIGlucywga2JkLCBxLCBzLCBzYW1wLFxyXG5zbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLFxyXG5iLCB1LCBpLCBjZW50ZXIsXHJcbmRsLCBkdCwgZGQsIG9sLCB1bCwgbGksXHJcbmZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLFxyXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcclxuYXJ0aWNsZSwgYXNpZGUsIGNhbnZhcywgZGV0YWlscywgZW1iZWQsXHJcbmZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCxcclxubWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXHJcbnRpbWUsIG1hcmssIGF1ZGlvLCB2aWRlbyB7XHJcbiAgbWFyZ2luICAgICAgICAgOiAwO1xyXG4gIHBhZGRpbmcgICAgICAgIDogMDtcclxuICBib3JkZXIgICAgICAgICA6IDA7XHJcbiAgZm9udC1zaXplICAgICAgOiAxMDAlO1xyXG4gIGZvbnQgICAgICAgICAgIDogaW5oZXJpdDtcclxuICB2ZXJ0aWNhbC1hbGlnbiA6IGJhc2VsaW5lO1xyXG59XHJcblxyXG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXHJcbmFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsXHJcbmZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1lbnUsIG5hdiwgc2VjdGlvbiB7XHJcbiAgZGlzcGxheSA6IGJsb2NrO1xyXG59XHJcblxyXG5ib2R5IHtcclxuICBsaW5lLWhlaWdodCA6IDE7XHJcbn1cclxuXHJcbm9sLCB1bCB7XHJcbiAgbGlzdC1zdHlsZSA6IG5vbmU7XHJcbn1cclxuXHJcbmJsb2NrcXVvdGUsIHEge1xyXG4gIHF1b3RlcyA6IG5vbmU7XHJcbn1cclxuXHJcbmJsb2NrcXVvdGU6YmVmb3JlLCBibG9ja3F1b3RlOmFmdGVyLFxyXG5xOmJlZm9yZSwgcTphZnRlciB7XHJcbiAgY29udGVudCA6ICcnO1xyXG4gIGNvbnRlbnQgOiBub25lO1xyXG59XHJcblxyXG50YWJsZSB7XHJcbiAgYm9yZGVyLWNvbGxhcHNlIDogY29sbGFwc2U7XHJcbiAgYm9yZGVyLXNwYWNpbmcgIDogMDtcclxufVxyXG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2NC4xLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXHJcblxyXG4vKipcclxuICogMS4gQ2hhbmdlIHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDMuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gSUUgYW5kIGlPUy5cclxuICovXHJcblxyXG5odG1sIHtcclxuICBmb250LWZhbWlseSAgICAgICAgICAgICAgOiAkZm9udC1yZWd1bGFyOyAvKiAxICovXHJcbiAgbGluZS1oZWlnaHQgICAgICAgICAgICAgIDogMS4xNTsgLyogMiAqL1xyXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0ICAgICA6IDEwMCU7IC8qIDMgKi9cclxuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3QgOiAxMDAlOyAvKiAzICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cclxuICovXHJcblxyXG5ib2R5IHtcclxuICBtYXJnaW4gOiAwO1xyXG59XHJcblxyXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cclxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXHJcbiAqL1xyXG5cclxuYXJ0aWNsZSxcclxuYXNpZGUsXHJcbmRldGFpbHMsIC8qIDEgKi9cclxuZmlnY2FwdGlvbixcclxuZmlndXJlLFxyXG5mb290ZXIsXHJcbmhlYWRlcixcclxubWFpbiwgLyogMiAqL1xyXG5tZW51LFxyXG5uYXYsXHJcbnNlY3Rpb24sXHJcbnN1bW1hcnkgeyAvKiAxICovXHJcbiAgZGlzcGxheSA6IGJsb2NrO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXHJcbiAqL1xyXG5cclxuYXVkaW8sXHJcbmNhbnZhcyxcclxucHJvZ3Jlc3MsXHJcbnZpZGVvIHtcclxuICBkaXNwbGF5IDogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cclxuICovXHJcblxyXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xyXG4gIGRpc3BsYXkgOiBub25lO1xyXG4gIGhlaWdodCAgOiAwO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cclxuICovXHJcblxyXG5wcm9ncmVzcyB7XHJcbiAgdmVydGljYWwtYWxpZ24gOiBiYXNlbGluZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXHJcbiAqL1xyXG5cclxudGVtcGxhdGUsIC8qIDEgKi9cclxuW2hpZGRlbl0ge1xyXG4gIGRpc3BsYXkgOiBub25lO1xyXG59XHJcblxyXG4vKiBMaW5rc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cclxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxyXG4gKi9cclxuXHJcbmEge1xyXG4gIGJhY2tncm91bmQtY29sb3IgICAgICAgICAgICAgOiB0cmFuc3BhcmVudDsgLyogMSAqL1xyXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXAgOiBvYmplY3RzOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIG91dGxpbmUgb24gZm9jdXNlZCBsaW5rcyB3aGVuIHRoZXkgYXJlIGFsc28gYWN0aXZlIG9yIGhvdmVyZWRcclxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXHJcbiAqL1xyXG5cclxuYTphY3RpdmUsXHJcbmE6aG92ZXIge1xyXG4gIG91dGxpbmUtd2lkdGggOiAwO1xyXG59XHJcblxyXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cclxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cclxuICovXHJcblxyXG5hYmJyW3RpdGxlXSB7XHJcbiAgYm9yZGVyLWJvdHRvbSAgIDogbm9uZTsgLyogMSAqL1xyXG4gIHRleHQtZGVjb3JhdGlvbiA6IHVuZGVybGluZTsgLyogMiAqL1xyXG4gIHRleHQtZGVjb3JhdGlvbiA6IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxyXG4gKi9cclxuXHJcbmIsXHJcbnN0cm9uZyB7XHJcbiAgZm9udC13ZWlnaHQgOiBpbmhlcml0O1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cclxuICovXHJcblxyXG5iLFxyXG5zdHJvbmcge1xyXG4gIGZvbnQtd2VpZ2h0IDogYm9sZGVyO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxyXG4gKi9cclxuXHJcbmRmbiB7XHJcbiAgZm9udC1zdHlsZSA6IGl0YWxpYztcclxufVxyXG5cclxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcclxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cclxuICovXHJcblxyXG5oMSB7XHJcbiAgZm9udC1zaXplIDogMmVtO1xyXG4gIG1hcmdpbiAgICA6IDAuNjdlbSAwO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxyXG4gKi9cclxuXHJcbm1hcmsge1xyXG4gIGJhY2tncm91bmQtY29sb3IgOiAjZmYwO1xyXG4gIGNvbG9yICAgICAgICAgICAgOiAjMDAwO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxuc21hbGwge1xyXG4gIGZvbnQtc2l6ZSA6IDgwJTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxyXG4gKiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxuc3ViLFxyXG5zdXAge1xyXG4gIGZvbnQtc2l6ZSAgICAgIDogNzUlO1xyXG4gIGxpbmUtaGVpZ2h0ICAgIDogMDtcclxuICBwb3NpdGlvbiAgICAgICA6IHJlbGF0aXZlO1xyXG4gIHZlcnRpY2FsLWFsaWduIDogYmFzZWxpbmU7XHJcbn1cclxuXHJcbnN1YiB7XHJcbiAgYm90dG9tIDogLTAuMjVlbTtcclxufVxyXG5cclxuc3VwIHtcclxuICB0b3AgOiAtMC41ZW07XHJcbn1cclxuXHJcbi8qIEVtYmVkZGVkIGNvbnRlbnRcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cclxuICovXHJcblxyXG5pbWcge1xyXG4gIGJvcmRlci1zdHlsZSA6IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cclxuICovXHJcblxyXG5zdmc6bm90KDpyb290KSB7XHJcbiAgb3ZlcmZsb3cgOiBoaWRkZW47XHJcbn1cclxuXHJcbi8qIEdyb3VwaW5nIGNvbnRlbnRcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxuY29kZSxcclxua2JkLFxyXG5wcmUsXHJcbnNhbXAge1xyXG4gIGZvbnQtZmFtaWx5IDogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cclxuICBmb250LXNpemUgICA6IDFlbTsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxyXG4gKi9cclxuXHJcbmZpZ3VyZSB7XHJcbiAgbWFyZ2luIDogMWVtIDQwcHg7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxyXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cclxuICovXHJcblxyXG5ociB7XHJcbiAgYm94LXNpemluZyA6IGNvbnRlbnQtYm94OyAvKiAxICovXHJcbiAgaGVpZ2h0ICAgICA6IDA7IC8qIDEgKi9cclxuICBvdmVyZmxvdyAgIDogdmlzaWJsZTsgLyogMiAqL1xyXG59XHJcblxyXG4vKiBGb3Jtc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIDEuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxyXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5pbnB1dCxcclxub3B0Z3JvdXAsXHJcbnNlbGVjdCxcclxudGV4dGFyZWEge1xyXG4gIGZvbnQgICA6IGluaGVyaXQ7IC8qIDEgKi9cclxuICBtYXJnaW4gOiAwOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZXN0b3JlIHRoZSBmb250IHdlaWdodCB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cclxuICovXHJcblxyXG5vcHRncm91cCB7XHJcbiAgZm9udC13ZWlnaHQgOiBib2xkO1xyXG59XHJcblxyXG4vKipcclxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXHJcbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5pbnB1dCB7IC8qIDEgKi9cclxuICBvdmVyZmxvdyA6IHZpc2libGU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cclxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxyXG4gKi9cclxuXHJcbmJ1dHRvbixcclxuc2VsZWN0IHsgLyogMSAqL1xyXG4gIHRleHQtdHJhbnNmb3JtIDogbm9uZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxyXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXHJcbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXHJcblt0eXBlPVwicmVzZXRcIl0sXHJcblt0eXBlPVwic3VibWl0XCJdIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2UgOiBidXR0b247IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXHJcbiAqL1xyXG5cclxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxyXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcclxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcclxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xyXG4gIGJvcmRlci1zdHlsZSA6IG5vbmU7XHJcbiAgcGFkZGluZyAgICAgIDogMDtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cclxuICovXHJcblxyXG5idXR0b246LW1vei1mb2N1c3JpbmcsXHJcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxyXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxyXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XHJcbiAgb3V0bGluZSA6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcclxufVxyXG5cclxuLyoqXHJcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxyXG4gKi9cclxuXHJcbmZpZWxkc2V0IHtcclxuICBib3JkZXIgIDogMXB4IHNvbGlkICNjMGMwYzA7XHJcbiAgbWFyZ2luICA6IDAgMnB4O1xyXG4gIHBhZGRpbmcgOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXHJcbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcclxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxubGVnZW5kIHtcclxuICBib3gtc2l6aW5nICA6IGJvcmRlci1ib3g7IC8qIDEgKi9cclxuICBjb2xvciAgICAgICA6IGluaGVyaXQ7IC8qIDIgKi9cclxuICBkaXNwbGF5ICAgICA6IHRhYmxlOyAvKiAxICovXHJcbiAgbWF4LXdpZHRoICAgOiAxMDAlOyAvKiAxICovXHJcbiAgcGFkZGluZyAgICAgOiAwOyAvKiAzICovXHJcbiAgd2hpdGUtc3BhY2UgOiBub3JtYWw7IC8qIDEgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXHJcbiAqL1xyXG5cclxudGV4dGFyZWEge1xyXG4gIG92ZXJmbG93IDogYXV0bztcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLS5cclxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cclxuICovXHJcblxyXG5bdHlwZT1cImNoZWNrYm94XCJdLFxyXG5bdHlwZT1cInJhZGlvXCJdIHtcclxuICBib3gtc2l6aW5nIDogYm9yZGVyLWJveDsgLyogMSAqL1xyXG4gIHBhZGRpbmcgICAgOiAwOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXHJcbiAqL1xyXG5cclxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXHJcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcclxuICBoZWlnaHQgOiBhdXRvO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXHJcbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxyXG4gKi9cclxuXHJcblt0eXBlPVwic2VhcmNoXCJdIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2UgOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cclxuICBvdXRsaW5lLW9mZnNldCAgICAgOiAtMnB4OyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgYW5kIGNhbmNlbCBidXR0b25zIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXHJcbiAqL1xyXG5cclxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXHJcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2UgOiBub25lO1xyXG59XHJcblxyXG4vKipcclxuICogQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvZiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XHJcbiAgY29sb3IgICA6IGluaGVyaXQ7XHJcbiAgb3BhY2l0eSA6IDAuNTQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXHJcbiAqL1xyXG5cclxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlIDogYnV0dG9uOyAvKiAxICovXHJcbiAgZm9udCAgICAgICAgICAgICAgIDogaW5oZXJpdDsgLyogMiAqL1xyXG59XHJcbiIsIiRjb2xvci1kYW5nZXIgICAgICAgICAgIDogI0ZGMDAwMDtcclxuJGNvbG9yLWVycm9yICAgICAgICAgICAgOiAjZmY1YzVjO1xyXG5cclxuJGJnLWNvbG9yICAgICAgICAgICAgICAgOiAjREVERURFO1xyXG4kYmctY29sb3ItYnRuICAgICAgICAgICA6ICNGRkNGMDA7XHJcblxyXG4kd2lkdGgtbW9iaWxlICAgICAgICAgICA6IDQ4MHB4O1xyXG4kd2lkdGgtdGFibGV0ICAgICAgICAgICA6IDc2OHB4O1xyXG4kd2lkdGgtZGVza3RvcCAgICAgICAgICA6IDEyMDBweDtcclxuXHJcbiRtZWRpYS1tb2JpbGUgICAgICAgICAgIDogKG1pbi13aWR0aDogJHdpZHRoLW1vYmlsZSk7XHJcbiRtZWRpYS10YWJsZXQgICAgICAgICAgIDogKG1pbi13aWR0aDogJHdpZHRoLXRhYmxldCk7XHJcbiRtZWRpYS1kZXNrdG9wICAgICAgICAgIDogKG1pbi13aWR0aDogJHdpZHRoLWRlc2t0b3ApO1xyXG5cclxuJGZvbnQtYm9sZCAgICAgICAgICAgICAgOiAnQ2lyY2VXZWJCb2xkJywgc2Fucy1zZXJpZjtcclxuJGZvbnQtcmVndWxhciAgICAgICAgICAgOiAnQ2lyY2VXZWJSZWd1bGFyJywgc2Fucy1zZXJpZjtcclxuJGZvbnQtbGlnaHQgICAgICAgICAgICAgOiAnQ2lyY2VXZWJMaWdodCcsIHNhbnMtc2VyaWY7IFxyXG4kZm9udC1leHRyYS1saWdodCAgICAgICA6ICdDaXJjZVdlYkV4dHJhTGlnaHQnLCBzYW5zLXNlcmlmOyBcclxuXHJcbiRmb250LWNvbG9yLXByaW1hcnkgICAgIDogIzAwMDAwMDtcclxuJGZvbnQtY29sb3Itc2Vjb25kYXJ5ICAgOiAjZmZmZmZmO1xyXG5cclxuJGZvbnQtc2l6ZS1zbWFsbCAgICAgICAgOiAxMXB4O1xyXG4kZm9udC1zaXplLXJlZ3VsYXIgICAgICA6IDIwcHg7XHJcbiRmb250LXNpemUtYmlnICAgICAgICAgIDogNDBweDtcclxuIiwiLyogaHR0cDovL21leWVyd2ViLmNvbS9lcmljL3Rvb2xzL2Nzcy9yZXNldC9cclxuICAgdjIuMCB8IDIwMTEwMTI2XHJcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pICovXG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsXG5hLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsXG5kZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsXG5zbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLFxuYiwgdSwgaSwgY2VudGVyLFxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcbmZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLFxudGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCxcbmZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCxcbm1lbnUsIG5hdiwgb3V0cHV0LCBydWJ5LCBzZWN0aW9uLCBzdW1tYXJ5LFxudGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgZm9udDogaW5oZXJpdDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cbmFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsXG5mb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIHNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG5ib2R5IHtcbiAgbGluZS1oZWlnaHQ6IDE7IH1cblxub2wsIHVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTsgfVxuXG5ibG9ja3F1b3RlLCBxIHtcbiAgcXVvdGVzOiBub25lOyB9XG5cbmJsb2NrcXVvdGU6YmVmb3JlLCBibG9ja3F1b3RlOmFmdGVyLFxucTpiZWZvcmUsIHE6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgY29udGVudDogbm9uZTsgfVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbi8qISBub3JtYWxpemUuY3NzIHY0LjEuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qKlxyXG4gKiAxLiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXHJcbiAqIDIuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cclxuICogMy4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBJRSBhbmQgaU9TLlxyXG4gKi9cbmh0bWwge1xuICBmb250LWZhbWlseTogXCJDaXJjZVdlYlJlZ3VsYXJcIiwgc2Fucy1zZXJpZjtcbiAgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMiAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMyAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDMgKi8gfVxuXG4vKipcclxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXHJcbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cclxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXHJcbiAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgLyogMSAqL1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXHJcbiAqL1xuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxyXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDsgfVxuXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cclxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxyXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cclxuICovXG50ZW1wbGF0ZSxcbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKiBMaW5rc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cclxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxyXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzO1xuICAvKiAyICovIH1cblxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxyXG4gKiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cclxuICovXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lLXdpZHRoOiAwOyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxyXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxyXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXHJcbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0OyB9XG5cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxyXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXHJcbiAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXHJcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXHJcbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxyXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcclxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXHJcbiAqIGFsbCBicm93c2Vycy5cclxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXHJcbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbi8qKlxyXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cclxuICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cclxuICovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXHJcbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDsgfVxuXG4vKipcclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cclxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXHJcbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi8gfVxuXG4vKiBGb3Jtc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAqIDEuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxyXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXHJcbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXHJcbiAqL1xub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4vKipcclxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXHJcbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXHJcbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cclxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxyXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXHJcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxyXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXHJcbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAqL1xuYnV0dG9uLFxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAyICovIH1cblxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXHJcbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXHJcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cclxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuXG4vKipcclxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXHJcbiAqL1xuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07IH1cblxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXHJcbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cclxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxyXG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cclxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi8gfVxuXG4vKipcclxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRS5cclxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxyXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXHJcbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uXHJcbiAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxyXG4gKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cclxuICovXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAvKiAyICovIH1cblxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cclxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSB0ZXh0IHN0eWxlIG9mIHBsYWNlaG9sZGVycyBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXHJcbiAqL1xuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG9wYWNpdHk6IDAuNTQ7IH1cblxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cclxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqLyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJBcmlhbE1UXCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvQXJpYWxNVC53b2ZmXCIpOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJDaXJjZVdlYkxpZ2h0XCI7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9DaXJjZVdlYkxpZ2h0LndvZmZcIik7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkNpcmNlV2ViRXh0cmFMaWdodFwiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvQ2lyY2VXZWJFeHRyYUxpZ2h0LndvZmZcIik7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkNpcmNlV2ViUmVndWxhclwiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvQ2lyY2VXZWJSZWd1bGFyLndvZmZcIik7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkNpcmNlV2ViQm9sZFwiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvQ2lyY2VXZWJCb2xkLndvZmZcIik7IH1cblxuKiwgOmFmdGVyLCA6YmVmb3JlLCBpbnB1dFt0eXBlPXNlYXJjaF0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjREVERURFO1xuICBmb250LWZhbWlseTogXCJDaXJjZVdlYlJlZ3VsYXJcIiwgc2Fucy1zZXJpZjsgfVxuXG4uY29udGFpbmVyIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHdpZHRoOiA0ODBweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgICAuY29udGFpbmVyIHtcbiAgICAgIHdpZHRoOiA3NjhweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuY29udGFpbmVyIHtcbiAgICAgIHdpZHRoOiAxMjAwcHg7IH0gfVxuXG51bCB7XG4gIG1hcmdpbjogMDsgfVxuXG5pbWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLmJ0biB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkNGMDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBsaW5lLWhlaWdodDogMTQ2JTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGhlaWdodDogNzJweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgd2lkdGg6IDMwNHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmctbGVmdDogMzBweDsgfVxuICAuYnRuOjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDI1cHg7XG4gICAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL0Fycm93Q29weTIucG5nXCIpIGxlZnQgY2VudGVyIG5vLXJlcGVhdDtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpOyB9XG4gIC5idG46Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7IH1cblxuLmlucHV0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAzMjhweDtcbiAgaGVpZ2h0OiA3MnB4O1xuICBwYWRkaW5nOiAyMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUZFRkVGO1xuICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuICBib3JkZXI6IDA7IH1cbiAgLmlucHV0OmZvY3VzIHtcbiAgICBvdXRsaW5lOiAwOyB9XG5cbi53ZWxjb21lIHtcbiAgYmFja2dyb3VuZDogdXJsKC4uL2ltZy9iYWNrX251bGxfcGVyY2VudHMuanBnKSBuby1yZXBlYXQgdG9wIGNlbnRlcjtcbiAgaGVpZ2h0OiA2NDBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBwYWRkaW5nOiAyNHB4O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uLXg6IDgwJTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgLndlbGNvbWUge1xuICAgICAgcGFkZGluZzogNjFweCA1NnB4O1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbi14OiAxMDAlOyB9IH1cblxuLndlbGNvbWVfX2hlYWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuXG4ud2VsY29tZV9fbG9nbyB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIHdpZHRoOiAxMDRweDtcbiAgaGVpZ2h0OiA1NnB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAud2VsY29tZV9fbG9nbyB7XG4gICAgICBtYXJnaW4tdG9wOiAtMTNweDsgfSB9XG5cbi53ZWxjb21lX19tZW51IHtcbiAgZGlzcGxheTogbm9uZTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgLndlbGNvbWVfX21lbnUge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICBmb250LXNpemU6IDExcHg7XG4gICAgICBsaW5lLWhlaWdodDogMTQ2JTsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLndlbGNvbWVfX2xhbmd1YWdlIHtcbiAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC53ZWxjb21lLWxhbmd1YWdlX19hcnJvdyB7XG4gICAgYm9yZGVyOiBzb2xpZCAjOUI5QjlCO1xuICAgIGJvcmRlci13aWR0aDogMCA0cHggNHB4IDA7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBhZGRpbmc6IDRweDtcbiAgICBtYXJnaW46IDAgMCAwIDEwcHg7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAgYm9yZGVyLWJvdHRvbS13aWR0aDogdGhpbjtcbiAgICBib3JkZXItcmlnaHQtd2lkdGg6IHRoaW47IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC53ZWxjb21lX19uYW1lIHtcbiAgICBjb2xvcjogI0ZGQ0YwMDtcbiAgICBtYXJnaW4tbGVmdDogNTBweDsgfSB9XG5cbi53ZWxjb21lX19maXJzdC10aXRsZSB7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBsaW5lLWhlaWdodDogMTIwJTtcbiAgZm9udC1zaXplOiA0MHB4O1xuICBwYWRkaW5nLXRvcDogMjAwcHg7XG4gIGZvbnQtZmFtaWx5OiBcIkNpcmNlV2ViRXh0cmFMaWdodFwiLCBzYW5zLXNlcmlmOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAud2VsY29tZV9fZmlyc3QtdGl0bGUge1xuICAgICAgcGFkZGluZy10b3A6IDE2MHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDExMCU7XG4gICAgICBmb250LXNpemU6IDY2cHg7IH0gfVxuXG4ud2VsY29tZV9fc2Vjb25kLXRpdGxlIHtcbiAgY29sb3I6ICNEMkQyRDI7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbGluZS1oZWlnaHQ6IDEzNCU7XG4gIHBhZGRpbmc6IDIwcHggMCAzMHB4O1xuICBmb250LWZhbWlseTogXCJDaXJjZVdlYkV4dHJhTGlnaHRcIiwgc2Fucy1zZXJpZjsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgLndlbGNvbWVfX3NlY29uZC10aXRsZSB7XG4gICAgICBjb2xvcjogIzlCOUI5QjtcbiAgICAgIGZvbnQtc2l6ZTogMzBweDsgfSB9XG5cbi53ZWxjb21lX19idG4ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuLmluZm8tb25lIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4uaW5mby1vbmVfX2l0ZW1zIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGQ0YwMDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgcGFkZGluZzogMjBweDtcbiAgaGVpZ2h0OiA0MDBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuaW5mby1vbmVfX2l0ZW1zIHtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBwYWRkaW5nOiA1MHB4OyB9IH1cblxuLmluZm8tb25lX19hY2NvdW50LXRleHQge1xuICBkaXNwbGF5OiBub25lOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuaW5mby1vbmVfX2FjY291bnQtdGV4dCB7XG4gICAgICBmb250LWZhbWlseTogXCJDaXJjZVdlYkJvbGRcIiwgc2Fucy1zZXJpZjtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDE2MCU7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgaGVpZ2h0OiA2MHB4O1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogLTcwcHg7XG4gICAgICB0b3A6IDA7XG4gICAgICBib3R0b206IDA7XG4gICAgICBtYXJnaW46IGF1dG87XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH0gfVxuXG4uaW5mby1vbmVfX3BlcmNlbnQge1xuICBiYWNrZ3JvdW5kOiB1cmwoLi4vaW1nL3plcm8uc3ZnKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlcjtcbiAgaGVpZ2h0OiAyMDFweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgbWFyZ2luOiA0MHB4IDA7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC5pbmZvLW9uZV9fcGVyY2VudCB7XG4gICAgICBtYXJnaW46IDBweCAxNDBweCAwIDkwcHg7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH0gfVxuXG4uaW5mby1vbmVfX2NvbWlzc2lvbi10ZXh0IHtcbiAgZGlzcGxheTogbm9uZTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgLmluZm8tb25lX19jb21pc3Npb24tdGV4dCB7XG4gICAgICBkaXNwbGF5OiBibG9jazsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuaW5mby1vbmVfX2NvbWlzc2lvbi10ZXh0IHtcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICBsaW5lLWhlaWdodDogMTYwJTtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIkNpcmNlV2ViQm9sZFwiLCBzYW5zLXNlcmlmO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBib3R0b206IC02MHB4O1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICBsZWZ0OiAwO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH0gfVxuXG4uaW5mby1vbmVfX3RleHQge1xuICBmb250LXNpemU6IDIycHg7XG4gIGxpbmUtaGVpZ2h0OiAxNDYlO1xuICBjb2xvcjogIzAwMDAwMDtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC5pbmZvLW9uZV9fdGV4dCB7XG4gICAgICBmb250LXNpemU6IDQwcHg7XG4gICAgICBsaW5lLWhlaWdodDogMTIwJTtcbiAgICAgIHdpZHRoOiAxMzUwcHg7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfSB9XG5cbi5pbmZvLXR3byB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi5pbmZvLXR3b19faXRlbXMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nOiA1MHB4IDE0cHggMTRweCAxNHB4OyB9XG5cbi5pbmZvLXR3b19fdGl0bGUge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBmb250LXNpemU6IDMwcHg7XG4gIGxpbmUtaGVpZ2h0OiAxMzQlO1xuICBjb2xvcjogIzAwMDAwMDtcbiAgcGFkZGluZzogMCA1MHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC5pbmZvLXR3b19fdGl0bGUge1xuICAgICAgZm9udC1zaXplOiA0MHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDEyMCU7IH0gfVxuXG4uaW5mby10d29fX2Jhbm5lcnMtYXJlYSB7XG4gIHBhZGRpbmc6IDUwcHggNXB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBhbGlnbi1zZWxmOiBzdHJldGNoO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cblxuLmluZm8tdHdvX19hcnJvdy1sZWZ0LFxuLmluZm8tdHdvX19hcnJvdy1yaWdodCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9BcnJvd0NvcHkyLnBuZ1wiKTtcbiAgd2lkdGg6IDI0cHg7XG4gIGhlaWdodDogMjRweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgLmluZm8tdHdvX19hcnJvdy1sZWZ0LFxuICAgIC5pbmZvLXR3b19fYXJyb3ctcmlnaHQge1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG5cbi5pbmZvLXR3b19fYXJyb3ctcmlnaHQge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpOyB9XG5cbi5pbmZvLXR3b19fYmFubmVycyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdpZHRoOiAyMDZweDtcbiAgaGVpZ2h0OiA2NnB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC5pbmZvLXR3b19fYmFubmVycyB7XG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICB3aWR0aDogYXV0bztcbiAgICAgIGhlaWdodDogYXV0bztcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuaW5mby10d29fX2Jhbm5lciB7XG4gICAgbWFyZ2luOiAyMHB4IDQwcHg7IH0gfVxuXG4uaW5mby10d29fX2Zvcm0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuXG4uaW5mby10d29fX21vYmlsZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC5pbmZvLXR3b19fbW9iaWxlIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4gICAgICAuaW5mby10d29fX21vYmlsZSBpbnB1dCB7XG4gICAgICAgIGNvbG9yOiAjOUI5QjlCOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAuaW5mby10d28tbW9iaWxlX19leGFtcGxlIHtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgY29sb3I6ICM5QjlCOUI7XG4gICAgbGluZS1oZWlnaHQ6IDE0NiU7XG4gICAgcGFkZGluZzogMTBweCAxNXB4OyB9IH1cblxuLmluZm8tdHdvX19lbWFpbCB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC5pbmZvLXR3b19fZW1haWwge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7IH1cbiAgICAgIC5pbmZvLXR3b19fZW1haWwgaW5wdXQge1xuICAgICAgICBib3gtc2hhZG93OiAwIDAgOHB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICAgICAgICBjb2xvcjogIzAwMDAwMDtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI0RFREVERTsgfSB9XG5cbi5pbmZvLXR3b19fdGV4dCB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgbGluZS1oZWlnaHQ6IDEyNCU7XG4gIGNvbG9yOiAjMDAwMDAwO1xuICBwYWRkaW5nOiAxMHB4IDAgMzBweCAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiA0ODBweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgLmluZm8tdHdvX190ZXh0IHtcbiAgICAgIHdpZHRoOiA1MDBweDsgfSB9XG5cbi5wYWdlLWZvb3RlciB7XG4gIG1hcmdpbjogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIzMjMyMzsgfVxuXG4ucGFnZS1mb290ZXJfX3NvY2lhbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICB3aWR0aDogNDAwcHg7XG4gIG1hcmdpbjogYXV0bztcbiAgbGluZS1oZWlnaHQ6IDE0MyU7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLnBhZ2UtZm9vdGVyX19zb2NpYWwgaW1nIHtcbiAgICB3aWR0aDogYXV0bztcbiAgICBoZWlnaHQ6IDIwcHg7IH1cblxuLnBhZ2UtZm9vdGVyX19tZW51IHtcbiAgZGlzcGxheTogZmxleDtcbiAgcGFkZGluZzogMjBweDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIG1hcmdpbjogYXV0byAwO1xuICBmb250LWZhbWlseTogXCJDaXJjZVdlYkxpZ2h0XCIsIHNhbnMtc2VyaWY7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC5wYWdlLWZvb3Rlcl9fbWVudSB7XG4gICAgICBwYWRkaW5nOiAyMHB4IDQwcHg7IH0gfVxuXG4ucGFnZS1mb290ZXItbWVudV9fY29sdW1uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZmxleC1ncm93OiAxO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC5wYWdlLWZvb3Rlci1tZW51X19jb2x1bW4ge1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDUwcHg7IH0gfVxuXG4ucGFnZS1mb290ZXItbWVudV9fbGluayB7XG4gIGNvbG9yOiAjOUI5QjlCO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGxpbmUtaGVpZ2h0OiAxNTAlO1xuICBmb250LXNpemU6IDE2cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC5wYWdlLWZvb3Rlci1tZW51X19saW5rIHtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNDYlO1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH0gfVxuXG4ucGFnZS1mb290ZXItbWVudV9fbGlua19wcmltYXJ5IHtcbiAgY29sb3I6ICNmZmZmZmY7IH1cblxuLnBhZ2UtZm9vdGVyX19pbmZvIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICM2MTYxNjE7XG4gIHBhZGRpbmc6IDQwcHggMjBweCA1MHB4IDIwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAucGFnZS1mb290ZXJfX2luZm8ge1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgcGFkZGluZzogNDBweCA0MHB4IDUwcHggNDBweDsgfSB9XG5cbi5wYWdlLWZvb3Rlci1pbmZvX190ZXh0IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogIzYxNjE2MTtcbiAgZm9udC1zaXplOiAxMXB4O1xuICBsaW5lLWhlaWdodDogMTQ2JTtcbiAgZm9udC1mYW1pbHk6ICdBcmlhbE1UJzsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgLnBhZ2UtZm9vdGVyLWluZm9fX3RleHQge1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDsgfSB9XG5cbi5wYWdlLWZvb3Rlci1pbmZvX19iYW5uZXJzIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgLnBhZ2UtZm9vdGVyLWluZm9fX2Jhbm5lcnMge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgbWluLXdpZHRoOiAzMDBweDtcbiAgICAgIG1hcmdpbi1yaWdodDogLTIwcHg7IH1cbiAgICAgIC5wYWdlLWZvb3Rlci1pbmZvX19iYW5uZXJzIGltZyB7XG4gICAgICAgIG1hcmdpbjogMCAyMHB4IDIwcHggMTBweDsgfSB9XG5cbi5wYWdlLWZvb3Rlci1pbmZvX19saW5rIHtcbiAgY29sb3I6ICM2MTYxNjE7IH1cblxuLnBhZ2UtZm9vdGVyX2Rlc2t0b3Atb25seSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC5wYWdlLWZvb3Rlcl9kZXNrdG9wLW9ubHkge1xuICAgICAgZGlzcGxheTogZmxleDsgfSB9XG5cbi5wYWdlLWZvb3Rlcl9tb2JpbGUtb25seSB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAucGFnZS1mb290ZXJfbW9iaWxlLW9ubHkge1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4iLCJAZm9udC1mYWNlIHtcclxuICBmb250LWZhbWlseTogXCJBcmlhbE1UXCI7XHJcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9BcmlhbE1ULndvZmZcIik7XHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gIGZvbnQtZmFtaWx5OiBcIkNpcmNlV2ViTGlnaHRcIjtcclxuICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICBzcmM6IHVybChcIi4uL2ZvbnRzL0NpcmNlV2ViTGlnaHQud29mZlwiKTtcclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcbiAgZm9udC1mYW1pbHk6IFwiQ2lyY2VXZWJFeHRyYUxpZ2h0XCI7XHJcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9DaXJjZVdlYkV4dHJhTGlnaHQud29mZlwiKTtcclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcbiAgZm9udC1mYW1pbHk6IFwiQ2lyY2VXZWJSZWd1bGFyXCI7XHJcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9DaXJjZVdlYlJlZ3VsYXIud29mZlwiKTtcclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcbiAgZm9udC1mYW1pbHk6IFwiQ2lyY2VXZWJCb2xkXCI7XHJcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9DaXJjZVdlYkJvbGQud29mZlwiKTtcclxufSIsIiosIDphZnRlciwgOmJlZm9yZSwgaW5wdXRbdHlwZT1zZWFyY2hdIHtcclxuICBib3gtc2l6aW5nIDogYm9yZGVyLWJveDtcclxufVxyXG5cclxuYm9keSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvciAgOiAkYmctY29sb3I7XHJcbiAgZm9udC1mYW1pbHkgICAgICAgOiAkZm9udC1yZWd1bGFyO1xyXG59XHJcblxyXG4uY29udGFpbmVyIHtcclxuICBAaW5jbHVkZSBjb250YWluZXI7XHJcbn1cclxuXHJcbnVsIHtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbmltZyB7XHJcbiAgZGlzcGxheSAgICAgOiBibG9jaztcclxuICBtYXgtd2lkdGggICA6IDEwMCU7XHJcbiAgaGVpZ2h0ICAgICAgOiBhdXRvO1xyXG59XHJcbiIsIkBtaXhpbiB2aXNpYmxlLW1vYmlsZS1vbmx5KCRtb2JpbGVEaXNwbGF5KSB7XHJcbiAgZGlzcGxheSAgIDogJG1vYmlsZURpc3BsYXk7XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS10YWJsZXR9IHtcclxuICB9XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS1kZXNrdG9wfSB7XHJcbiAgICBkaXNwbGF5ICAgOiBub25lO1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIHZpc2libGUtZGVza3RvcC1vbmx5KCRkZXNrdG9wRGlzcGxheSkge1xyXG4gIGRpc3BsYXkgICA6IG5vbmU7XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS10YWJsZXR9IHtcclxuICB9XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS1kZXNrdG9wfSB7XHJcbiAgICBkaXNwbGF5OiAkZGVza3RvcERpc3BsYXk7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gY29udGFpbmVyIHtcclxuICBtYXJnaW4gICAgICAgICAgIDogMCBhdXRvO1xyXG4gIHdpZHRoICAgICAgICAgICAgOiAkd2lkdGgtbW9iaWxlO1xyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtdGFibGV0fSB7XHJcbiAgICB3aWR0aCA6ICR3aWR0aC10YWJsZXQ7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtZGVza3RvcH0ge1xyXG4gICAgd2lkdGggOiAkd2lkdGgtZGVza3RvcDtcclxuICB9XHJcbn1cclxuIiwiLmJ0biB7XHJcbiAgYmFja2dyb3VuZC1jb2xvciAgICAgIDogJGJnLWNvbG9yLWJ0bjtcclxuICBib3JkZXIgICAgICAgICAgICAgICAgOiBub25lO1xyXG4gIGNvbG9yICAgICAgICAgICAgICAgICA6ICRmb250LWNvbG9yLXByaW1hcnk7XHJcbiAgY3Vyc29yICAgICAgICAgICAgICAgIDogcG9pbnRlcjtcclxuICB0ZXh0LWRlY29yYXRpb24gICAgICAgOiBub25lO1xyXG4gIGxpbmUtaGVpZ2h0ICAgICAgICAgICA6IDE0NiU7XHJcbiAgZGlzcGxheSAgICAgICAgICAgICAgIDogYmxvY2s7XHJcbiAgZm9udC1zaXplICAgICAgICAgICAgIDogJGZvbnQtc2l6ZS1zbWFsbDtcclxuICBtYXJnaW4gICAgICAgICAgICAgICAgOiAwIGF1dG87XHJcbiAgaGVpZ2h0ICAgICAgICAgICAgICAgIDogNzJweDtcclxuICB0ZXh0LXRyYW5zZm9ybSAgICAgICAgOiB1cHBlcmNhc2U7XHJcbiAgdGV4dC1hbGlnbiAgICAgICAgICAgIDogbGVmdDtcclxuICB3aWR0aCAgICAgICAgICAgICAgICAgOiAzMDRweDtcclxuICBwb3NpdGlvbiAgICAgICAgICAgICAgOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdyAgICAgICAgICAgICAgOiBoaWRkZW47XHJcbiAgcGFkZGluZy1sZWZ0ICAgICAgICAgIDogMzBweDsgXHJcblxyXG4gICY6OmJlZm9yZVxyXG4gIHtcclxuICAgIGNvbnRlbnQgICAgICAgICAgICAgOiBcIlwiO1xyXG4gICAgcG9zaXRpb24gICAgICAgICAgICA6IGFic29sdXRlO1xyXG4gICAgd2lkdGggICAgICAgICAgICAgICA6IDEwMCU7XHJcbiAgICBoZWlnaHQgICAgICAgICAgICAgIDogMTAwJTtcclxuICAgIHRvcCAgICAgICAgICAgICAgICAgOiAwO1xyXG4gICAgcmlnaHQgICAgICAgICAgICAgICA6IDI1cHg7XHJcbiAgICBiYWNrZ3JvdW5kICAgICAgICAgIDogdXJsKCcuLi9pbWcvQXJyb3dDb3B5Mi5wbmcnKSBsZWZ0IGNlbnRlciBuby1yZXBlYXQ7XHJcbiAgICB0cmFuc2Zvcm0gICAgICAgICAgIDogcm90YXRlKDE4MGRlZyk7XHJcbiAgfVxyXG5cclxuICAmOmZvY3VzIHtcclxuICAgIG91dGxpbmUgICAgICAgICAgICAgOiBub25lO1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldH0ge1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLWRlc2t0b3B9IHtcclxuICB9XHJcbn1cclxuXHJcbiIsIi5pbnB1dCB7XHJcbiAgICBkaXNwbGF5ICAgICAgICAgICAgIDogYmxvY2s7XHJcbiAgICB3aWR0aCAgICAgICAgICAgICAgIDogMzI4cHg7XHJcbiAgICBoZWlnaHQgICAgICAgICAgICAgIDogNzJweDtcclxuICAgIHBhZGRpbmcgICAgICAgICAgICAgOiAyMHB4OyAgICBcclxuICAgIGJhY2tncm91bmQtY29sb3IgICAgOiAjRUZFRkVGO1xyXG4gICAgYmFja2dyb3VuZC1jbGlwICAgICA6IHBhZGRpbmctYm94O1xyXG4gICAgYm9yZGVyICAgICAgICAgICAgICA6IDA7XHJcblxyXG4gICAgJjpmb2N1cyB7XHJcbiAgICAgICAgb3V0bGluZSAgICAgICAgIDogMDtcclxuICAgIH1cclxufVxyXG5cclxuIiwiLndlbGNvbWUge1xyXG4gIGJhY2tncm91bmQgICAgICAgICAgICAgICAgOiB1cmwoLi4vaW1nL2JhY2tfbnVsbF9wZXJjZW50cy5qcGcpIG5vLXJlcGVhdCB0b3AgY2VudGVyO1xyXG4gIGhlaWdodCAgICAgICAgICAgICAgICAgICAgOiA2NDBweDtcclxuICBwb3NpdGlvbiAgICAgICAgICAgICAgICAgIDogcmVsYXRpdmU7XHJcbiAgdGV4dC1hbGlnbiAgICAgICAgICAgICAgICA6IGxlZnQ7XHJcbiAgcGFkZGluZyAgICAgICAgICAgICAgICAgICA6IDI0cHg7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbi14ICAgICA6IDgwJTsgXHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS10YWJsZXR9IHsgICAgXHJcbiAgfVxyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtZGVza3RvcH0ge1xyXG4gICAgcGFkZGluZyAgICAgICAgICAgICAgICAgOiA2MXB4IDU2cHg7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uLXggICA6IDEwMCU7IFxyXG4gIH1cclxufVxyXG5cclxuLndlbGNvbWVfX2hlYWRlciB7XHJcbiAgZGlzcGxheSAgICAgICAgIDogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQgOiBzcGFjZS1iZXR3ZWVuOyBcclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldH0ge1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLWRlc2t0b3B9IHtcclxuICB9XHJcbn1cclxuXHJcbi53ZWxjb21lX19sb2dvIHtcclxuICBtYXJnaW4tdG9wICAgIDogMDtcclxuICB3aWR0aCAgICAgICAgIDogMTA0cHg7XHJcbiAgaGVpZ2h0ICAgICAgICA6IDU2cHg7XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS10YWJsZXR9IHtcclxuICB9XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS1kZXNrdG9wfSB7XHJcbiAgICBtYXJnaW4tdG9wICA6IC0xM3B4O1xyXG4gIH1cclxufVxyXG5cclxuLndlbGNvbWVfX21lbnUge1xyXG4gIGRpc3BsYXkgICAgICAgICAgIDogbm9uZTtcclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldH0ge1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLWRlc2t0b3B9IHtcclxuICAgIGRpc3BsYXkgICAgICAgICA6IGZsZXg7ICAgIFxyXG4gICAgdGV4dC10cmFuc2Zvcm0gIDogdXBwZXJjYXNlO1xyXG4gICAgZm9udC1zaXplICAgICAgIDogJGZvbnQtc2l6ZS1zbWFsbDtcclxuICAgIGxpbmUtaGVpZ2h0ICAgICA6IDE0NiU7XHJcbiAgfVxyXG59XHJcblxyXG4ud2VsY29tZV9fbGFuZ3VhZ2Uge1xyXG4gIEBtZWRpYSAjeyRtZWRpYS10YWJsZXR9IHtcclxuICB9XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS1kZXNrdG9wfSB7XHJcbiAgICBjb2xvciAgICAgICAgICAgICA6ICRmb250LWNvbG9yLXNlY29uZGFyeTtcclxuICAgIHRleHQtZGVjb3JhdGlvbiAgIDogbm9uZTtcclxuICAgIGRpc3BsYXkgICAgICAgICAgIDogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudCAgIDogc3BhY2UtYmV0d2VlbjtcclxuICB9XHJcbn1cclxuXHJcbi53ZWxjb21lLWxhbmd1YWdlX19hcnJvdyB7XHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldH0ge1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLWRlc2t0b3B9IHtcclxuICAgIGJvcmRlciAgICAgICAgICAgICAgOiBzb2xpZCAjOUI5QjlCO1xyXG4gICAgYm9yZGVyLXdpZHRoICAgICAgICA6IDAgNHB4IDRweCAwO1xyXG4gICAgZGlzcGxheSAgICAgICAgICAgICA6IGlubGluZS1ibG9jaztcclxuICAgIHBhZGRpbmcgICAgICAgICAgICAgOiA0cHg7XHJcbiAgICBtYXJnaW4gICAgICAgICAgICAgIDogMCAwIDAgMTBweDtcclxuICAgIHRyYW5zZm9ybSAgICAgICAgICAgOiByb3RhdGUoNDVkZWcpO1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm0gICA6IHJvdGF0ZSg0NWRlZyk7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbiAgICAgIDogdG9wO1xyXG4gICAgYm9yZGVyLWJvdHRvbS13aWR0aCA6IHRoaW47XHJcbiAgICBib3JkZXItcmlnaHQtd2lkdGggIDogdGhpbjtcclxuICB9XHJcbn1cclxuXHJcbi53ZWxjb21lX19uYW1lIHsgIFxyXG4gIEBtZWRpYSAjeyRtZWRpYS10YWJsZXR9IHtcclxuICB9XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS1kZXNrdG9wfSB7XHJcbiAgICBjb2xvciAgICAgICA6ICRiZy1jb2xvci1idG47XHJcbiAgICBtYXJnaW4tbGVmdCA6IDUwcHg7XHJcbiAgfVxyXG59XHJcblxyXG4ud2VsY29tZV9fZmlyc3QtdGl0bGUge1xyXG4gIGNvbG9yICAgICAgICAgIDogJGZvbnQtY29sb3Itc2Vjb25kYXJ5O1xyXG4gIGxpbmUtaGVpZ2h0ICAgIDogMTIwJTtcclxuICBmb250LXNpemUgICAgICA6ICRmb250LXNpemUtYmlnO1xyXG4gIHBhZGRpbmctdG9wICAgIDogMjAwcHg7XHJcbiAgZm9udC1mYW1pbHkgICAgOiAkZm9udC1leHRyYS1saWdodDtcclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldH0ge1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLWRlc2t0b3B9IHtcclxuICAgIHBhZGRpbmctdG9wICA6IDE2MHB4O1xyXG4gICAgbGluZS1oZWlnaHQgIDogMTEwJTtcclxuICAgIGZvbnQtc2l6ZSAgICA6IDY2cHg7XHJcbiAgfVxyXG59XHJcblxyXG4ud2VsY29tZV9fc2Vjb25kLXRpdGxlIHtcclxuICBjb2xvciAgICAgICA6ICNEMkQyRDI7XHJcbiAgZm9udC1zaXplICAgOiAyNHB4O1xyXG4gIGxpbmUtaGVpZ2h0IDogMTM0JTtcclxuICBwYWRkaW5nICAgICA6IDIwcHggMCAzMHB4O1xyXG4gIGZvbnQtZmFtaWx5IDogJGZvbnQtZXh0cmEtbGlnaHQ7XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS10YWJsZXR9IHtcclxuICB9XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS1kZXNrdG9wfSB7XHJcbiAgICBjb2xvciAgICAgOiAjOUI5QjlCO1xyXG4gICAgZm9udC1zaXplIDogMzBweDtcclxuICB9XHJcbn1cclxuXHJcbi53ZWxjb21lX19idG4ge1xyXG4gIGRpc3BsYXkgIDogaW5saW5lLWJsb2NrO1xyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtdGFibGV0fSB7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtZGVza3RvcH0ge1xyXG4gIH1cclxufVxyXG4iLCIuaW5mby1vbmUge1xyXG4gIG92ZXJmbG93IDogaGlkZGVuO1xyXG59XHJcblxyXG4uaW5mby1vbmVfX2l0ZW1zIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yICA6ICRiZy1jb2xvci1idG47XHJcbiAgZGlzcGxheSAgICAgICAgICAgOiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uICAgIDogY29sdW1uO1xyXG4gIHBhZGRpbmcgICAgICAgICAgIDogMjBweDtcclxuICBoZWlnaHQgICAgICAgICAgICA6IDQwMHB4O1xyXG4gIHRleHQtYWxpZ24gICAgICAgIDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zICAgICAgIDogY2VudGVyO1xyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtdGFibGV0fSB7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtZGVza3RvcH0ge1xyXG4gICAgZmxleC1kaXJlY3Rpb24gIDogcm93O1xyXG4gICAgdGV4dC1hbGlnbiAgICAgIDogbGVmdDtcclxuICAgIGp1c3RpZnktY29udGVudCA6IHNwYWNlLWFyb3VuZDsgXHJcbiAgICBwb3NpdGlvbiAgICAgICAgOiByZWxhdGl2ZTtcclxuICAgIHBhZGRpbmcgICAgICAgICA6IDUwcHg7XHJcbiAgfVxyXG59XHJcblxyXG4uaW5mby1vbmVfX2FjY291bnQtdGV4dCB7XHJcbiAgZGlzcGxheSAgICAgOiBub25lO1xyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtdGFibGV0fSB7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtZGVza3RvcH0ge1xyXG4gICAgZm9udC1mYW1pbHkgICAgIDogJGZvbnQtYm9sZDsgXHJcbiAgICBkaXNwbGF5ICAgICAgICAgOiBibG9jaztcclxuICAgIHRyYW5zZm9ybSAgICAgICA6IHJvdGF0ZSg5MGRlZyk7XHJcbiAgICBmb250LXNpemUgICAgICAgOiAkZm9udC1zaXplLXJlZ3VsYXI7XHJcbiAgICBsaW5lLWhlaWdodCAgICAgOiAxNjAlO1xyXG4gICAgZm9udC13ZWlnaHQgICAgIDogYm9sZDtcclxuICAgIHdoaXRlLXNwYWNlICAgICA6IG5vd3JhcDtcclxuICAgIG92ZXJmbG93ICAgICAgICA6IGhpZGRlbjtcclxuICAgIGhlaWdodCAgICAgICAgICA6IDYwcHg7XHJcbiAgICBwb3NpdGlvbiAgICAgICAgOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQgICAgICAgICAgICA6IC03MHB4O1xyXG4gICAgdG9wICAgICAgICAgICAgIDogMDtcclxuICAgIGJvdHRvbSAgICAgICAgICA6IDA7XHJcbiAgICBtYXJnaW4gICAgICAgICAgOiBhdXRvO1xyXG4gICAgdGV4dC1hbGlnbiAgICAgIDogY2VudGVyO1xyXG4gIH1cclxufVxyXG5cclxuLmluZm8tb25lX19wZXJjZW50IHtcclxuICBiYWNrZ3JvdW5kICAgICAgICA6IHVybCguLi9pbWcvemVyby5zdmcpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyO1xyXG4gIGhlaWdodCAgICAgICAgICAgIDogMjAxcHg7XHJcbiAgd2lkdGggICAgICAgICAgICAgOiAxMDAlO1xyXG4gIGJhY2tncm91bmQtc2l6ZSAgIDogY29udGFpbjtcclxuICBtYXJnaW4gICAgICAgICAgICA6IDQwcHggMDtcclxuICBcclxuICBAbWVkaWEgI3skbWVkaWEtdGFibGV0fSB7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtZGVza3RvcH0ge1xyXG4gICAgbWFyZ2luICAgICAgICAgIDogMHB4IDE0MHB4IDAgOTBweDtcclxuICAgIGRpc3BsYXkgICAgICAgICA6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQgOiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtcyAgICAgOiBmbGV4LWVuZDtcclxuICAgIHBvc2l0aW9uICAgICAgICA6IHJlbGF0aXZlOyBcclxuICB9XHJcbn1cclxuXHJcbi5pbmZvLW9uZV9fY29taXNzaW9uLXRleHQge1xyXG4gIEBpbmNsdWRlIHZpc2libGUtZGVza3RvcC1vbmx5KGJsb2NrKTtcclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldH0ge1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLWRlc2t0b3B9IHtcclxuICAgIHdoaXRlLXNwYWNlICAgICA6IG5vd3JhcDtcclxuICAgIGZvbnQtc2l6ZSAgICAgICA6ICRmb250LXNpemUtcmVndWxhcjtcclxuICAgIGxpbmUtaGVpZ2h0ICAgICA6IDE2MCU7XHJcbiAgICBmb250LWZhbWlseSAgICAgOiAkZm9udC1ib2xkO1xyXG4gICAgZGlzcGxheSAgICAgICAgIDogYmxvY2s7XHJcbiAgICBwb3NpdGlvbiAgICAgICAgOiBhYnNvbHV0ZTtcclxuICAgIGJvdHRvbSAgICAgICAgICA6IC02MHB4O1xyXG4gICAgbWFyZ2luICAgICAgICAgIDogMCBhdXRvO1xyXG4gICAgbGVmdCAgICAgICAgICAgIDogMDtcclxuICAgIHJpZ2h0ICAgICAgICAgICA6IDA7XHJcbiAgICB0ZXh0LWFsaWduICAgICAgOiBjZW50ZXI7XHJcbiAgfVxyXG59XHJcblxyXG4uaW5mby1vbmVfX3RleHQge1xyXG4gIGZvbnQtc2l6ZSAgICAgOiAyMnB4O1xyXG4gIGxpbmUtaGVpZ2h0ICAgOiAxNDYlO1xyXG4gIGNvbG9yICAgICAgICAgOiAkZm9udC1jb2xvci1wcmltYXJ5O1xyXG4gIHdpZHRoICAgICAgICAgOiAxMDAlO1xyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtdGFibGV0fSB7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtZGVza3RvcH0ge1xyXG4gICAgZm9udC1zaXplICAgOiAkZm9udC1zaXplLWJpZztcclxuICAgIGxpbmUtaGVpZ2h0IDogMTIwJTtcclxuICAgIHdpZHRoICAgICAgIDogMTM1MHB4O1xyXG4gICAgZGlzcGxheSAgICAgOiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXMgOiBjZW50ZXI7XHJcbiAgfVxyXG59IiwiLmluZm8tdHdvIHtcclxuICBvdmVyZmxvdyAgICAgICAgICA6IGhpZGRlbjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yICA6IHRyYW5zcGFyZW50O1xyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtdGFibGV0fSB7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtZGVza3RvcH0ge1xyXG4gIH1cclxufVxyXG5cclxuLmluZm8tdHdvX19pdGVtcyB7XHJcbiAgZGlzcGxheSAgICAgICAgOiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uIDogY29sdW1uO1xyXG4gIGFsaWduLWl0ZW1zICAgIDogY2VudGVyO1xyXG4gIHBhZGRpbmcgICAgICAgIDogNTBweCAxNHB4IDE0cHggMTRweDtcclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldH0ge1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLWRlc2t0b3B9IHtcclxuICB9XHJcbn1cclxuXHJcbi5pbmZvLXR3b19fdGl0bGUge1xyXG4gIG92ZXJmbG93ICAgICAgOiBoaWRkZW47XHJcbiAgZm9udC1zaXplICAgICA6IDMwcHg7XHJcbiAgbGluZS1oZWlnaHQgICA6IDEzNCU7XHJcbiAgY29sb3IgICAgICAgICA6ICRmb250LWNvbG9yLXByaW1hcnk7XHJcbiAgcGFkZGluZyAgICAgICA6IDAgNTBweDtcclxuICB0ZXh0LWFsaWduICAgIDogY2VudGVyO1xyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtdGFibGV0fSB7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtZGVza3RvcH0ge1xyXG4gICAgZm9udC1zaXplICAgICA6ICRmb250LXNpemUtYmlnO1xyXG4gICAgbGluZS1oZWlnaHQgICA6IDEyMCU7XHJcbiAgfVxyXG59XHJcblxyXG4uaW5mby10d29fX2Jhbm5lcnMtYXJlYSB7XHJcbiAgcGFkZGluZyAgICAgICAgIDogNTBweCA1cHg7XHJcbiAgZGlzcGxheSAgICAgICAgIDogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbiAgOiByb3c7XHJcbiAgYWxpZ24taXRlbXMgICAgIDogY2VudGVyO1xyXG4gIGFsaWduLXNlbGYgICAgICA6IHN0cmV0Y2g7XHJcbiAganVzdGlmeS1jb250ZW50IDogc3BhY2UtYmV0d2VlbjtcclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldH0ge1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLWRlc2t0b3B9IHtcclxuICB9XHJcbn1cclxuXHJcbi5pbmZvLXR3b19fYXJyb3ctbGVmdCxcclxuLmluZm8tdHdvX19hcnJvdy1yaWdodCB7XHJcbiAgYmFja2dyb3VuZC1pbWFnZSAgOiB1cmwoJy4uL2ltZy9BcnJvd0NvcHkyLnBuZycpO1xyXG4gIHdpZHRoICAgICAgICAgICAgIDogMjRweDtcclxuICBoZWlnaHQgICAgICAgICAgICA6IDI0cHg7XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS10YWJsZXR9IHtcclxuICB9XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS1kZXNrdG9wfSB7XHJcbiAgICBkaXNwbGF5IDogbm9uZTtcclxuICB9XHJcbn1cclxuXHJcbi5pbmZvLXR3b19fYXJyb3ctcmlnaHQge1xyXG4gIHRyYW5zZm9ybSA6IHJvdGF0ZSgxODBkZWcpO1xyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtdGFibGV0fSB7XHJcbiAgfVxyXG4gIFxyXG4gIEBtZWRpYSAjeyRtZWRpYS1kZXNrdG9wfSB7XHJcbiAgfVxyXG59XHJcblxyXG4uaW5mby10d29fX2Jhbm5lcnMge1xyXG4gIGRpc3BsYXkgICAgICAgICAgIDogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbiAgICA6IHJvdztcclxuICBvdmVyZmxvdyAgICAgICAgICA6IGhpZGRlbjtcclxuICB3aWR0aCAgICAgICAgICAgICA6IDIwNnB4O1xyXG4gIGhlaWdodCAgICAgICAgICAgIDogNjZweDtcclxuICBwb3NpdGlvbiAgICAgICAgICA6IHJlbGF0aXZlO1xyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtdGFibGV0fSB7XHJcbiAgfVxyXG4gIFxyXG4gIEBtZWRpYSAjeyRtZWRpYS1kZXNrdG9wfSB7XHJcbiAgICBmbGV4LXdyYXAgICAgICAgOiB3cmFwO1xyXG4gICAgd2lkdGggICAgICAgICAgIDogYXV0bztcclxuICAgIGhlaWdodCAgICAgICAgICA6IGF1dG87XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQgOiBjZW50ZXI7XHJcbiAgfVxyXG59XHJcblxyXG4uaW5mby10d29fX2Jhbm5lciB7XHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldH0ge1xyXG4gIH1cclxuICBcclxuICBAbWVkaWEgI3skbWVkaWEtZGVza3RvcH0ge1xyXG4gICAgbWFyZ2luICAgICAgICAgIDogMjBweCA0MHB4OyBcclxuICB9XHJcbn1cclxuXHJcbi5pbmZvLXR3b19fZm9ybSB7XHJcbiAgZGlzcGxheSAgICAgICAgIDogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQgOiBjZW50ZXI7XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS10YWJsZXR9IHtcclxuICB9XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS1kZXNrdG9wfSB7XHJcbiAgfVxyXG59XHJcblxyXG4uaW5mby10d29fX21vYmlsZSB7XHJcbiAgZGlzcGxheSAgIDogbm9uZTtcclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldH0ge1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLWRlc2t0b3B9IHtcclxuICAgIGRpc3BsYXkgICAgICAgICA6IGZsZXg7XHJcbiAgICBtYXJnaW4tcmlnaHQgICAgOiAyMHB4O1xyXG4gICAgZmxleC1kaXJlY3Rpb24gIDogY29sdW1uO1xyXG5cclxuICAgIGlucHV0IHtcclxuICAgICAgY29sb3IgICAgICAgICA6ICM5QjlCOUI7XHJcbiAgICB9XHJcbiAgfVxyXG59IFxyXG5cclxuLmluZm8tdHdvLW1vYmlsZV9fZXhhbXBsZSB7XHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldH0ge1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLWRlc2t0b3B9IHtcclxuICAgIGZvbnQtc2l6ZSAgICAgOiAkZm9udC1zaXplLXNtYWxsO1xyXG4gICAgY29sb3IgICAgICAgICA6ICM5QjlCOUI7XHJcbiAgICBsaW5lLWhlaWdodCAgIDogMTQ2JTtcclxuICAgIHBhZGRpbmcgICAgICAgOiAxMHB4IDE1cHg7XHJcbiAgfVxyXG59IFxyXG5cclxuLmluZm8tdHdvX19lbWFpbCB7XHJcbiAgZGlzcGxheSAgIDogbm9uZTtcclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldH0ge1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLWRlc2t0b3B9IHtcclxuICAgIGRpc3BsYXkgICAgICAgOiBibG9jaztcclxuICAgIG1hcmdpbi1yaWdodCAgOiAyMHB4O1xyXG5cclxuICAgIGlucHV0IHtcclxuICAgICAgYm94LXNoYWRvdyAgICAgICAgOiAwIDAgOHB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yICA6ICRmb250LWNvbG9yLXNlY29uZGFyeTtcclxuICAgICAgY29sb3IgICAgICAgICAgICAgOiAkZm9udC1jb2xvci1wcmltYXJ5O1xyXG4gICAgICBib3JkZXIgICAgICAgICAgICA6IDFweCBzb2xpZCAjREVERURFO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmluZm8tdHdvX190ZXh0IHtcclxuICBvdmVyZmxvdyAgICAgIDogaGlkZGVuO1xyXG4gIGZvbnQtc2l6ZSAgICAgOiAxM3B4O1xyXG4gIGxpbmUtaGVpZ2h0ICAgOiAxMjQlO1xyXG4gIGNvbG9yICAgICAgICAgOiAkZm9udC1jb2xvci1wcmltYXJ5O1xyXG4gIHBhZGRpbmcgICAgICAgOiAxMHB4IDAgMzBweCAwO1xyXG4gIHRleHQtYWxpZ24gICAgOiBjZW50ZXI7XHJcbiAgd2lkdGggICAgICAgICA6IDQ4MHB4OyBcclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldH0ge1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLWRlc2t0b3B9IHtcclxuICAgIHdpZHRoICAgICA6IDUwMHB4OyBcclxuICB9XHJcbn1cclxuIiwiLnBhZ2UtZm9vdGVyIHtcclxuICBtYXJnaW4gICAgICAgICAgICA6IDA7XHJcbiAgZGlzcGxheSAgICAgICAgICAgOiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uICAgIDogY29sdW1uO1xyXG4gIGJhY2tncm91bmQtY29sb3IgIDogIzIzMjMyMztcclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldH0ge1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLWRlc2t0b3B9IHtcclxuICB9XHJcbn1cclxuXHJcbi5wYWdlLWZvb3Rlcl9fc29jaWFsIHtcclxuICBkaXNwbGF5ICAgICAgICAgOiBmbGV4O1xyXG4gIHBhZGRpbmcgICAgICAgICA6IDIwcHg7XHJcbiAganVzdGlmeS1jb250ZW50IDogc3BhY2UtYXJvdW5kO1xyXG4gIHdpZHRoICAgICAgICAgICA6IDQwMHB4O1xyXG4gIG1hcmdpbiAgICAgICAgICA6IGF1dG87XHJcbiAgbGluZS1oZWlnaHQgICAgIDogMTQzJTtcclxuICBhbGlnbi1pdGVtcyAgICAgOiBjZW50ZXI7XHJcbiAgXHJcbiAgaW1nIHtcclxuICAgIHdpZHRoICAgICAgICAgOiBhdXRvO1xyXG4gICAgaGVpZ2h0ICAgICAgICA6IDIwcHg7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtdGFibGV0fSB7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtZGVza3RvcH0ge1xyXG4gIH1cclxufVxyXG5cclxuLnBhZ2UtZm9vdGVyX19tZW51IHtcclxuICBkaXNwbGF5ICAgICAgICAgOiBmbGV4O1xyXG4gIHBhZGRpbmcgICAgICAgICA6IDIwcHg7XHJcbiAganVzdGlmeS1jb250ZW50IDogc3BhY2UtYXJvdW5kO1xyXG4gIG1hcmdpbiAgICAgICAgICA6IGF1dG8gMDtcclxuICBmb250LWZhbWlseSAgICAgOiAkZm9udC1saWdodDtcclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldH0ge1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLWRlc2t0b3B9IHtcclxuICAgIHBhZGRpbmcgICAgICAgOiAyMHB4IDQwcHg7XHJcbiAgfVxyXG59XHJcblxyXG4ucGFnZS1mb290ZXItbWVudV9fY29sdW1uIHtcclxuICBkaXNwbGF5ICAgICAgICAgOiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uICA6IGNvbHVtbjtcclxuICBmbGV4LWdyb3cgICAgICAgOiAxO1xyXG4gIHRleHQtYWxpZ24gICAgICA6IGNlbnRlcjtcclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldH0ge1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLWRlc2t0b3B9IHtcclxuICAgIHRleHQtYWxpZ24gICAgOiBsZWZ0O1xyXG4gICAgcGFkZGluZy1yaWdodCA6IDUwcHg7XHJcbiAgfVxyXG59XHJcblxyXG4ucGFnZS1mb290ZXItbWVudV9fbGluayB7XHJcbiAgY29sb3IgICAgICAgICAgICAgICA6ICM5QjlCOUI7XHJcbiAgdGV4dC1kZWNvcmF0aW9uICAgICA6IG5vbmU7XHJcbiAgbGluZS1oZWlnaHQgICAgICAgICA6IDE1MCU7IFxyXG4gIGZvbnQtc2l6ZSAgICAgICAgICAgOiAxNnB4O1xyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtdGFibGV0fSB7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtZGVza3RvcH0ge1xyXG4gICAgIGxpbmUtaGVpZ2h0ICAgICAgOiAxNDYlO1xyXG4gICAgIHRleHQtZGVjb3JhdGlvbiAgOiB1bmRlcmxpbmU7IFxyXG4gIH1cclxufSBcclxuXHJcbi5wYWdlLWZvb3Rlci1tZW51X19saW5rX3ByaW1hcnkge1xyXG4gIGNvbG9yIDogJGZvbnQtY29sb3Itc2Vjb25kYXJ5O1xyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtdGFibGV0fSB7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgI3skbWVkaWEtZGVza3RvcH0ge1xyXG4gIH1cclxufSBcclxuXHJcbi5wYWdlLWZvb3Rlcl9faW5mbyB7XHJcbiAgYm9yZGVyLXRvcCAgICAgICAgOiAxcHggc29saWQgIzYxNjE2MTsgIFxyXG4gIHBhZGRpbmcgICAgICAgICAgIDogNDBweCAyMHB4IDUwcHggMjBweDtcclxuICBkaXNwbGF5ICAgICAgICAgICA6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50ICAgOiBjZW50ZXI7XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS10YWJsZXR9IHtcclxuICB9XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS1kZXNrdG9wfSB7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQgOiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgcGFkZGluZyAgICAgICAgIDogNDBweCA0MHB4IDUwcHggNDBweDtcclxuICB9XHJcbn1cclxuXHJcbi5wYWdlLWZvb3Rlci1pbmZvX190ZXh0IHtcclxuICB0ZXh0LWFsaWduICAgICAgOiBjZW50ZXI7XHJcbiAgY29sb3IgICAgICAgICAgIDogIzYxNjE2MTtcclxuICBmb250LXNpemUgICAgICAgOiAkZm9udC1zaXplLXNtYWxsO1xyXG4gIGxpbmUtaGVpZ2h0ICAgICA6IDE0NiU7XHJcbiAgZm9udC1mYW1pbHkgICAgIDogJ0FyaWFsTVQnOyBcclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldH0ge1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLWRlc2t0b3B9IHtcclxuICAgIHRleHQtYWxpZ24gICAgOiBsZWZ0O1xyXG4gIH1cclxufVxyXG5cclxuLnBhZ2UtZm9vdGVyLWluZm9fX2Jhbm5lcnMgeyBcclxuICBkaXNwbGF5ICAgICAgICAgICA6IG5vbmU7XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS10YWJsZXR9IHtcclxuICB9XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS1kZXNrdG9wfSB7XHJcbiAgICBpbWcge1xyXG4gICAgICBtYXJnaW4gICAgICAgIDogMCAyMHB4IDIwcHggMTBweDsgICAgICBcclxuICAgIH1cclxuXHJcbiAgICBkaXNwbGF5ICAgICAgICAgOiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb24gIDogcm93O1xyXG4gICAganVzdGlmeS1jb250ZW50IDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXMgICAgIDogZmxleC1zdGFydDtcclxuICAgIGZsZXgtd3JhcCAgICAgICA6IHdyYXA7XHJcbiAgICBtaW4td2lkdGggICAgICAgOiAzMDBweDtcclxuICAgIG1hcmdpbi1yaWdodCAgICA6IC0yMHB4OyBcclxuICB9XHJcbn1cclxuXHJcbi5wYWdlLWZvb3Rlci1pbmZvX19saW5rIHtcclxuICBjb2xvciA6ICM2MTYxNjE7XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS10YWJsZXR9IHtcclxuICB9XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS1kZXNrdG9wfSB7XHJcbiAgfVxyXG59XHJcblxyXG4ucGFnZS1mb290ZXJfZGVza3RvcC1vbmx5IHtcclxuICBAaW5jbHVkZSB2aXNpYmxlLWRlc2t0b3Atb25seShmbGV4KTtcclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldH0ge1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhICN7JG1lZGlhLWRlc2t0b3B9IHtcclxuICB9XHJcbn1cclxuXHJcbi5wYWdlLWZvb3Rlcl9tb2JpbGUtb25seSB7XHJcbiAgQGluY2x1ZGUgdmlzaWJsZS1tb2JpbGUtb25seShibG9jayk7XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS10YWJsZXR9IHtcclxuICB9XHJcblxyXG4gIEBtZWRpYSAjeyRtZWRpYS1kZXNrdG9wfSB7XHJcbiAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */
